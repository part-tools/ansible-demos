---

- name: Check whether the test mirror is pulled
  become: true
  become_method: sudo
  shell: docker images | grep -w {{ item.name }} | grep -w {{ item.tag }} | wc -l
  changed_when: false
  register: mirror_pulled
  with_items: "{{ test_image }}"

- name: Check whether the test mirror is saved
  shell: find {{ downloads_dir }} -name {{ item.service }}.tar | wc -l
  changed_when: false
  register: mirror_saved
  with_items: "{{ test_image }}"

- name: Pull the test mirror if it's not pulled and it's not saved
  become: true
  become_method: sudo
  shell: docker pull {{ item.name }}:{{ item.tag }}
  with_items: "{{ test_image }}"
  when: (mirror_pulled.results[0].stdout | int == 0) and
        ((mirror_saved.results[0].stdout | int == 0 ) or ( Tar_Save_Every_Time ))

- name: Save the test image as a tar file if it's not saved or save every time:{{Tar_Save_Every_Time}}
  become: true
  become_method: sudo
  shell:
    cmd: "docker save {{ item.name }}:{{ item.tag }} | gzip > {{ item.service }}.tar"
    chdir: "{{ downloads_dir }}"
  with_items: "{{ test_image }}"
  when: (mirror_saved.results[0].stdout | int == 0 ) or ( Tar_Save_Every_Time )

# 拉取carrier镜像
- name: Check whether the carrier mirror is pulled
  become: true
  become_method: sudo
  shell: docker images | grep -w {{ item.name }} | grep -w {{ item.tag }} | wc -l
  changed_when: false
  register: mirror_pulled
  with_items: "{{ carrier_image }}"

- name: Check whether the carrier mirror is saved
  shell: find {{ downloads_dir }} -name {{ item.service }}.tar | wc -l
  changed_when: false
  register: mirror_saved
  with_items: "{{ carrier_image }}"

- name: Pull the carrier mirror if it's not pulled and it's not saved
  become: true
  become_method: sudo
  shell: docker pull {{ item.name }}:{{ item.tag }}
  with_items: "{{ carrier_image }}"
  when: (mirror_pulled.results[0].stdout | int == 0) and
      ((mirror_saved.results[0].stdout | int == 0 ) or ( Tar_Save_Every_Time ))

- name: Save the carrier image as a tar file if it's not saved or save every time:{{Tar_Save_Every_Time}}
  become: true
  become_method: sudo
  shell:
    cmd: "docker save {{ item.name }}:{{ item.tag }} | gzip > {{ item.service }}.tar"
    chdir: "{{ downloads_dir }}"
  with_items: "{{ carrier_image }}"
  when: (mirror_saved.results[0].stdout | int == 0 ) or ( Tar_Save_Every_Time )

# 拉取fighter镜像
- name: Check whether the fighter mirror is pulled
  become: true
  become_method: sudo
  shell: docker images | grep -w {{ item.name }} | grep -w {{ item.tag }} | wc -l
  changed_when: false
  register: mirror_pulled
  with_items: "{{ fighter_image }}"

- name: Check whether the fighter mirror is saved
  shell: find {{ downloads_dir }} -name {{ item.service }}.tar | wc -l
  changed_when: false
  register: mirror_saved
  with_items: "{{ fighter_image }}"

- name: Pull the fighter mirror if it's not pulled and it's not saved
  become: true
  become_method: sudo
  shell: docker pull {{ item.name }}:{{ item.tag }}
  with_items: "{{ fighter_image }}"
  when: (mirror_pulled.results[0].stdout | int == 0) and
      ((mirror_saved.results[0].stdout | int == 0 ) or ( Tar_Save_Every_Time ))  

- name: Save the fighter image as a tar file if it's not saved or save every time:{{Tar_Save_Every_Time}}
  become: true
  become_method: sudo
  shell:
    cmd: "docker save {{ item.name }}:{{ item.tag }} | gzip > {{ item.service }}.tar"
    chdir: "{{ downloads_dir }}"
  with_items: "{{ fighter_image }}"
  when: (mirror_saved.results[0].stdout | int == 0 ) or ( Tar_Save_Every_Time )

# 拉取ice_via_consul镜像
- name: Check whether the ice_via_consul mirror is pulled
  become: true
  become_method: sudo
  shell: docker images | grep -w {{ item.name }} | grep -w {{ item.tag }} | wc -l
  changed_when: false
  register: mirror_pulled
  with_items: "{{ ice_via_consul_image }}"

- name: Check whether the ice_via_consul mirror is saved
  shell: find {{ downloads_dir }} -name {{ item.service }}.tar | wc -l
  changed_when: false
  register: mirror_saved
  with_items: "{{ ice_via_consul_image }}"

- name: Pull the ice_via_consul mirror if it's not pulled and it's not saved
  become: true
  become_method: sudo
  shell: docker pull {{ item.name }}:{{ item.tag }}
  with_items: "{{ ice_via_consul_image }}"
  when: (mirror_pulled.results[0].stdout | int == 0) and
      ((mirror_saved.results[0].stdout | int == 0 ) or ( Tar_Save_Every_Time ))

- name: Save the ice_via_consul image as a tar file if it's not saved or save every time:{{Tar_Save_Every_Time}}
  become: true
  become_method: sudo
  shell:
    cmd: "docker save {{ item.name }}:{{ item.tag }} | gzip > {{ item.service }}.tar"
    chdir: "{{ downloads_dir }}"
  with_items: "{{ ice_via_consul_image }}"
  when: (mirror_saved.results[0].stdout | int == 0 ) or ( Tar_Save_Every_Time )


# 加载镜像tar压缩包 
# - name: Load image from archive
#   docker_image:
#     name: "{{ item.name }}"
#     tag: "{{ item.tag }}"
#     # push: yes
#     load_path: "{{ downloads_dir }}/{{ item.service }}.tar"
#     # source: load
#   with_items: "{{ test_image }}"


# 启动容器
# - name: start carrier service
#   docker_container: 
#     name: carrier_service
#     image: "{{ default_container_image }}:v0.5.0"
#     state: started
#     network_mode: "host"
#     restart: yes
#     volumes:
#       - /home/luodahui/test/ansible-demos/install_docker_ubuntu/services/test/carrier.yml:/Carrier/config/carrier.yml
#       - /home/luodahui/test/ansible-demos/install_docker_ubuntu/services/test/p2p_priv_key/p2p_priv_key:/Carrier/config/p2p_priv_key
#     command: /Carrier/carrier --config-file /Carrier/config/carrier.yml

# - name: Run carrier container
#   become: True
#   shell:
#     cmd: "docker-compose -f docker-compose.yml up"
#     chdir: /home/luodahui/test/ansible-demos/install_docker_ubuntu/services/carrier

