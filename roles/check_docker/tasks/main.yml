---

# 检查主机清单是否正确
- name: Check ansible_ssh_user variable
  fail: msg="ansible_ssh_user == 'root' is not supported, please ssh via normal user"
  when: ansible_ssh_user == 'root'

# 目前只支持 Ubuntu 18.04 操作系统上面安装服务
# 判断操作系统
- name: Get distro name from /etc/os-release
  shell: "([ -f /etc/os-release ] && grep '^NAME=' /etc/os-release | sed s'/NAME=//' | tr -d \\\")"
  changed_when: false
  register: distro_shell_result

- name: Debug distro_shell_result information
  debug:
    var: distro_shell_result.stdout

- name: Check operating system
  fail: msg="Currently, only Ubuntu is supported"
  when: "'Ubuntu' != distro_shell_result.stdout"

# 判断操作系统版本
- name: Get distro_version from /etc/issue
  shell: "cat /etc/issue | head -n 1 | awk '{print $2}' | cut -b 1-5"
  changed_when: false
  register: distro_version_shell_result

- name: Debug distro_version information
  debug:
    var: distro_version_shell_result.stdout

- name: Check operating system version
  fail: msg="Currently, only Ubuntu 18.04 is supported"
  when: "'18.04' != distro_version_shell_result.stdout"

# 设置时区为 utc
- name: set timezone to Etc/UTC
  become: true
  timezone:
    name: Etc/UTC

# 检查docker
- name: Check if docker installed
  shell: docker --version | wc -l
  changed_when: false
  register: docker_exist

- name: include tasks yaml if not docker
  include_tasks: install_docker.yml
  when: docker_exist.stdout | int == 0

# 检查docker-compose
- name: Check if docker-compose installed
  shell: docker-compose --version | wc -l
  changed_when: false
  register: docker_compose_exist

- name: include tasks yaml if not docker-compose
  include_tasks: install_docker_compose.yml
  when: docker_compose_exist.stdout | int == 0

# - name: Get docker info
#   shell: "docker --version | awk '{print $3}'"
#   changed_when: false
#   register: docker_info

# - name: Get docker version
#   set_fact:
#     docker_version: "{{ docker_info | replace(',', '') }}"

# - name: Preflight check - Fail when the versions of docker doesn't meet the requirements
#   fail:
#     msg: "docker({{ docker_version }}) version is too low, Please reinstall."
#   when: docker_version | version_compare('20.10.16', '>')
